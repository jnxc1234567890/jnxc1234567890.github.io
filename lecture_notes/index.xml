<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Lecture_notes on</title><link>https://jnxc1234567890.github.io/nicemewiki/lecture_notes/</link><description>Recent content in Lecture_notes on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://jnxc1234567890.github.io/nicemewiki/lecture_notes/index.xml" rel="self" type="application/rss+xml"/><item><title>ECE120 Lecture 1 - Abstraction and Representation</title><link>https://jnxc1234567890.github.io/nicemewiki/lecture_notes/ECE120/ECE120-Lecture-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jnxc1234567890.github.io/nicemewiki/lecture_notes/ECE120/ECE120-Lecture-1/</guid><description>Abstraction Layer While constructing computers, we can use the idea of abstraction to make things easier: ![[lecture_notes/ECE120/images/Pasted image 20220414144524.png]]
Representations Definition for representation The mapping from one form to another is called a representation.</description></item><item><title>ECE120 Lecture 14</title><link>https://jnxc1234567890.github.io/nicemewiki/lecture_notes/ECE120/ECE120-Lecture-14/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jnxc1234567890.github.io/nicemewiki/lecture_notes/ECE120/ECE120-Lecture-14/</guid><description>Power of Two Checker How to check whether a number is the power of 2? It&amp;rsquo;s very easy for us human to do that because power of 2 has only one 1 bit in binary.</description></item><item><title>ECE120 Lecture 15</title><link>https://jnxc1234567890.github.io/nicemewiki/lecture_notes/ECE120/ECE120-Lecture-15/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jnxc1234567890.github.io/nicemewiki/lecture_notes/ECE120/ECE120-Lecture-15/</guid><description/></item><item><title>ECE120 Lecture 16</title><link>https://jnxc1234567890.github.io/nicemewiki/lecture_notes/ECE120/ECE120-Lecture-16/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jnxc1234567890.github.io/nicemewiki/lecture_notes/ECE120/ECE120-Lecture-16/</guid><description/></item><item><title>ECE120 Lecture 17</title><link>https://jnxc1234567890.github.io/nicemewiki/lecture_notes/ECE120/ECE120-Lecture-17/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jnxc1234567890.github.io/nicemewiki/lecture_notes/ECE120/ECE120-Lecture-17/</guid><description/></item><item><title>ECE120 Lecture 18</title><link>https://jnxc1234567890.github.io/nicemewiki/lecture_notes/ECE120/ECE120-Lecture-18/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jnxc1234567890.github.io/nicemewiki/lecture_notes/ECE120/ECE120-Lecture-18/</guid><description/></item><item><title>ECE120 Lecture 19</title><link>https://jnxc1234567890.github.io/nicemewiki/lecture_notes/ECE120/ECE120-Lecture-19/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jnxc1234567890.github.io/nicemewiki/lecture_notes/ECE120/ECE120-Lecture-19/</guid><description>FSM Definition of FSM A FSM consists of five parts:
Finite set of states Set of inputs Set of outputs(only dependent on state) Set of transition rules Methods for calculating outputs Digital FSM We implement FSM in digital system as sequential logic circuits.</description></item><item><title>ECE120 Lecture 2 - Numerical Representation</title><link>https://jnxc1234567890.github.io/nicemewiki/lecture_notes/ECE120/ECE120-Lecture-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jnxc1234567890.github.io/nicemewiki/lecture_notes/ECE120/ECE120-Lecture-2/</guid><description>Unsigned [[lecture_notes/ECE120/ECE120 Lecture 1#Definition for representation|Representation]] In order to represent an integer, the computer uses base-2 numbers from mathematics (aka. binary).</description></item><item><title>ECE120 Lecture 20</title><link>https://jnxc1234567890.github.io/nicemewiki/lecture_notes/ECE120/ECE120-Lecture-20/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jnxc1234567890.github.io/nicemewiki/lecture_notes/ECE120/ECE120-Lecture-20/</guid><description>Machine Models</description></item><item><title>ECE120 Lecture 21</title><link>https://jnxc1234567890.github.io/nicemewiki/lecture_notes/ECE120/ECE120-Lecture-21/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jnxc1234567890.github.io/nicemewiki/lecture_notes/ECE120/ECE120-Lecture-21/</guid><description/></item><item><title>ECE120 Lecture 22 - Memory</title><link>https://jnxc1234567890.github.io/nicemewiki/lecture_notes/ECE120/ECE120-Lecture-22/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jnxc1234567890.github.io/nicemewiki/lecture_notes/ECE120/ECE120-Lecture-22/</guid><description>Storing Lots of Bits The computer weâ€™re going to design has a lot of places to store bits. Each place stores 32 bits.</description></item><item><title>ECE120 Lecture 23 - From FSM to Computer</title><link>https://jnxc1234567890.github.io/nicemewiki/lecture_notes/ECE120/ECE120-Lecture-23/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jnxc1234567890.github.io/nicemewiki/lecture_notes/ECE120/ECE120-Lecture-23/</guid><description>FSM and Code</description></item><item><title>ECE120 Lecture 3</title><link>https://jnxc1234567890.github.io/nicemewiki/lecture_notes/ECE120/ECE120-Lecture-3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jnxc1234567890.github.io/nicemewiki/lecture_notes/ECE120/ECE120-Lecture-3/</guid><description/></item><item><title>ECE120 Lecture 4</title><link>https://jnxc1234567890.github.io/nicemewiki/lecture_notes/ECE120/ECE120-Lecture-4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jnxc1234567890.github.io/nicemewiki/lecture_notes/ECE120/ECE120-Lecture-4/</guid><description/></item><item><title>ECE120 Lecture 5</title><link>https://jnxc1234567890.github.io/nicemewiki/lecture_notes/ECE120/ECE120-Lecture-5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jnxc1234567890.github.io/nicemewiki/lecture_notes/ECE120/ECE120-Lecture-5/</guid><description/></item><item><title>ECE120 Lecture 6</title><link>https://jnxc1234567890.github.io/nicemewiki/lecture_notes/ECE120/ECE120-Lecture-6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jnxc1234567890.github.io/nicemewiki/lecture_notes/ECE120/ECE120-Lecture-6/</guid><description/></item><item><title>ECE120 Lecture 7</title><link>https://jnxc1234567890.github.io/nicemewiki/lecture_notes/ECE120/ECE120-Lecture-7/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jnxc1234567890.github.io/nicemewiki/lecture_notes/ECE120/ECE120-Lecture-7/</guid><description>Program Analysis Being able to read code is a necessary skill. In the real world, codes are often poorly commented (few people are interested in commenting their codes).</description></item><item><title>ECE120 Lecture 8</title><link>https://jnxc1234567890.github.io/nicemewiki/lecture_notes/ECE120/ECE120-Lecture-8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jnxc1234567890.github.io/nicemewiki/lecture_notes/ECE120/ECE120-Lecture-8/</guid><description>MOSFET All the digital electronics today use MOSFETs.
There&amp;rsquo;re two kinds, named after the charge carrier.
n(egative)-type p(ositive)-type !</description></item><item><title>ECE120 MOC</title><link>https://jnxc1234567890.github.io/nicemewiki/lecture_notes/ECE120/ECE120-MOC/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jnxc1234567890.github.io/nicemewiki/lecture_notes/ECE120/ECE120-MOC/</guid><description>Course Description ECE120: Intro to Computing Systems is a UIUC course about the structure of computing systems.
Lecture Notes [[lecture_notes/ECE120/ECE120 Lecture 1|Lecture 1]] [[lecture_notes/ECE120/ECE120 Lecture 2|Lecture 2]] [[lecture_notes/ECE120/ECE120 Lecture 3|Lecture 3]] [[lecture_notes/ECE120/ECE120 Lecture 4|Lecture 4]] [[lecture_notes/ECE120/ECE120 Lecture 5|Lecture 5]] [[lecture_notes/ECE120/ECE120 Lecture 6|Lecture 6]] [[lecture_notes/ECE120/ECE120 Lecture 7|Lecture 7]] [[lecture_notes/ECE120/ECE120 Lecture 8|Lecture 8]] [[Lectures/ECE120/Lecture 9|Lecture 9]] [[Lectures/ECE120/Lecture 10|Lecture 10]] [[Lectures/ECE120/Lecture 11|Lecture 11]] [[Lectures/ECE120/Lecture 12|Lecture 12]] [[Lectures/ECE120/Lecture 13|Lecture 13]] [[lecture_notes/ECE120/ECE120 Lecture 14|Lecture 14]] [[lecture_notes/ECE120/ECE120 Lecture 15|Lecture 15]] [[lecture_notes/ECE120/ECE120 Lecture 16|Lecture 16]] [[lecture_notes/ECE120/ECE120 Lecture 17|Lecture 17]] [[lecture_notes/ECE120/ECE120 Lecture 18|Lecture 18]] [[lecture_notes/ECE120/ECE120 Lecture 19|Lecture 19]] [[lecture_notes/ECE120/ECE120 Lecture 20|Lecture 20]] [[lecture_notes/ECE120/ECE120 Lecture 21|Lecture 21]] [[lecture_notes/ECE120/ECE120 Lecture 22|Lecture 22]] [[lecture_notes/ECE120/ECE120 Lecture 23|Lecture 23]] Lab Notes [[Lab 1]] [[Lab 2]] [[Lab 3]] Homework Notes</description></item><item><title>ECON102 Lecture 1</title><link>https://jnxc1234567890.github.io/nicemewiki/lecture_notes/ECON102/ECON102-Lecture-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jnxc1234567890.github.io/nicemewiki/lecture_notes/ECON102/ECON102-Lecture-1/</guid><description/></item><item><title>ECON102 Lecture 2</title><link>https://jnxc1234567890.github.io/nicemewiki/lecture_notes/ECON102/ECON102-Lecture-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jnxc1234567890.github.io/nicemewiki/lecture_notes/ECON102/ECON102-Lecture-2/</guid><description/></item><item><title>ECON102 Lecture 3</title><link>https://jnxc1234567890.github.io/nicemewiki/lecture_notes/ECON102/ECON102-Lecture-3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jnxc1234567890.github.io/nicemewiki/lecture_notes/ECON102/ECON102-Lecture-3/</guid><description/></item><item><title>ECON102 Lecture 4</title><link>https://jnxc1234567890.github.io/nicemewiki/lecture_notes/ECON102/ECON102-Lecture-4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jnxc1234567890.github.io/nicemewiki/lecture_notes/ECON102/ECON102-Lecture-4/</guid><description/></item><item><title>ECON102 Lecture 5</title><link>https://jnxc1234567890.github.io/nicemewiki/lecture_notes/ECON102/ECON102-Lecture-5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jnxc1234567890.github.io/nicemewiki/lecture_notes/ECON102/ECON102-Lecture-5/</guid><description/></item><item><title>ECON102 Lecture 6</title><link>https://jnxc1234567890.github.io/nicemewiki/lecture_notes/ECON102/ECON102-Lecture-6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jnxc1234567890.github.io/nicemewiki/lecture_notes/ECON102/ECON102-Lecture-6/</guid><description/></item><item><title>ECON102 Lecture 7 - Trade</title><link>https://jnxc1234567890.github.io/nicemewiki/lecture_notes/ECON102/ECON102-Lecture-7/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jnxc1234567890.github.io/nicemewiki/lecture_notes/ECON102/ECON102-Lecture-7/</guid><description>Production Possibilities Curve Production possibilities curve (PPC) shows the relationship between the maximum production of one good for a given level of production of another good.</description></item><item><title>ECON102 MOC</title><link>https://jnxc1234567890.github.io/nicemewiki/lecture_notes/ECON102/ECON102-MOC/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jnxc1234567890.github.io/nicemewiki/lecture_notes/ECON102/ECON102-MOC/</guid><description>Course Description ECON102: Microeconomics Principles
Lecture Notes [[lecture_notes/ECON102/ECON102 Lecture 1|Lecture 1 - Introduction]] [[Lecture 2 - Optimization &amp;amp; Demand &amp;amp; Supply]] [[Lecture 3 - Consumer Side]] Lecture 4 - [[lecture_notes/ECON102/ECON102 Lecture 7|Lecture 7 - Trade]]</description></item></channel></rss>